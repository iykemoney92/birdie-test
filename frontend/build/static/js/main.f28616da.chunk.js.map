{"version":3,"sources":["hooks/functions.tsx","components/MoodTimeline.tsx","components/FluidIntakeTimeline.tsx","components/DefaultTimeline.tsx","components/PhysicalHealthTimeline.tsx","components/RegularMedicationTimeline.tsx","components/TaskTimeline.tsx","components/VisitTimeline.tsx","context/appReducer.tsx","context/globalContext.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["capitalizeWords","text","words","split","i","length","toUpperCase","substr","join","decorateMenuItemText","replaceAll","MoodTimeline","props","TimelineItem","TimelineOppositeContent","sx","m","align","variant","color","format","timestamp","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","Card","p","Typography","user","className","payload","mood","toLowerCase","FluidIntakeTimeline","Chip","label","fluid","observed","DefaultTimeline","console","log","event_type","PhysicalHealthTimeline","note","RegularMedicationTimeline","medication_type","TaskTimeline","task_definition_description","VisitTimeline","state","action","type","AppData","GlobalContext","createContext","GlobalProvider","params","useReducer","AppReducer","dispatch","Provider","value","setUser","children","ChartJS","register","ArcElement","Tooltip","Legend","Home","id","useParams","useContext","useState","counter","setCounter","data","setData","obvType","setObvType","dateTimeFrom","setDateTimeFrom","dateTimeTo","setDateTimeTo","obvTypes","setObvTypes","snapShotData","setSnapShotData","open","setOpen","labels","datasets","backgroundColor","borderColor","borderWidth","groupedData","setGroupedData","loadMoreTimeLineDataHandler","a","slice","performGroupData","entryData","arr","borderBg","forEach","d","Object","keys","e","f","g","values","push","Math","floor","random","toString","padStart","loadAllData","fetch","then","result","json","catch","err","error","finally","useEffect","setTimeout","Backdrop","zIndex","CircularProgress","Grid","container","style","padding","item","xs","lg","mb","Alert","severity","role","aria-label","minHeight","options","maintainAspectRatio","height","map","index","avatar","Avatar","FormControl","fullWidth","InputLabel","Select","labelId","onChange","event","target","r","MenuItem","TextField","InputLabelProps","shrink","Box","textAlign","ButtonGroup","Button","onClick","uri","method","from","Date","toISOString","to","headers","body","JSON","stringify","Timeline","position","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f28616da.chunk.js","sourcesContent":["export const capitalizeWords = (text:string) => {\r\n    const words = text.split(\" \");\r\n\r\n    for (let i = 0; i < words.length; i++ ){\r\n        words[i] = words[i][0].toUpperCase() + words[i].substr(1);\r\n    }\r\n\r\n    return words.join(\" \");\r\n}\r\n\r\nexport const decorateMenuItemText = (text: string) => {\r\n    return capitalizeWords(text.replaceAll(\"_\", \" \"));\r\n}\r\n\r\nexport const randomColor = () => { \r\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16).padStart(6,'0').toUpperCase(); \r\n}","import { TimelineItem, TimelineSeparator, TimelineDot, TimelineContent, TimelineConnector, \r\n  TimelineOppositeContent } from '@mui/lab'\r\nimport '../App.css';\r\nimport {  Card, Typography } from \"@mui/material\";\r\nimport Moment from 'react-moment';\r\n\r\nexport const MoodTimeline = (props:any) => {\r\n  return (\r\n    <TimelineItem>\r\n        \r\n        <TimelineOppositeContent\r\n          sx={{ m: 'auto 0' }}\r\n          align=\"right\"\r\n          variant=\"body2\"\r\n          color=\"text.secondary\"\r\n        ><Moment format=\"YYYY/MM/DD hh:mm a\">{props.props.timestamp}</Moment></TimelineOppositeContent>\r\n              <TimelineSeparator>\r\n                <TimelineConnector />\r\n                <TimelineDot  ></TimelineDot>\r\n                <TimelineConnector />\r\n              </TimelineSeparator>\r\n              <TimelineContent>\r\n                <Card sx={{p:3}}>\r\n                <Typography variant=\"body2\"><strong>{props.props.user}</strong> was <span className={ props.props.payload.mood.toLowerCase() === \"happy\"\r\n                  ? \"MuiCustom  MuiCustomHappy\" : props.props.payload.mood.toLowerCase() === \"sad\"\r\n                    ? \"MuiCustom  MuiCustomSad\" : props.props.payload.mood.toLowerCase() === \"okay\"\r\n                      ? \"MuiCustom  MuiCustomOkay\" : \"MuiCustom  MuiCustomAny\"}>{props.props.payload.mood}</span></Typography>\r\n                </Card>\r\n              </TimelineContent>\r\n            </TimelineItem>\r\n  )\r\n}\r\n","import { TimelineItem, TimelineSeparator, TimelineDot, TimelineContent, TimelineConnector, \r\n  TimelineOppositeContent } from '@mui/lab'\r\nimport '../App.css';\r\nimport {  Card, Chip, Typography } from \"@mui/material\";\r\nimport Moment from 'react-moment';\r\nimport { capitalizeWords } from '../hooks/functions';\r\nimport LocalCafeIcon from '@mui/icons-material/LocalCafe';\r\n\r\nexport const FluidIntakeTimeline = (props:any) => {\r\n  return (\r\n    <TimelineItem>\r\n        <TimelineOppositeContent\r\n          sx={{ m: 'auto 0' }}\r\n          align=\"right\"\r\n          variant=\"body2\"\r\n          color=\"text.secondary\"\r\n        >\r\n          <Moment format=\"YYYY/MM/DD hh:mm a\">{props.props.timestamp}</Moment>\r\n        </TimelineOppositeContent>\r\n              <TimelineSeparator>\r\n                <TimelineConnector />\r\n                <TimelineDot >\r\n                    <LocalCafeIcon />\r\n                </TimelineDot>\r\n              </TimelineSeparator>\r\n              <TimelineContent>\r\n                <Card sx={{p:3}}>\r\n                <Typography variant=\"body2\">{props.props.user} had a <Chip label={capitalizeWords(props.props.payload.fluid)} variant=\"outlined\" color={props.props.payload.observed ? 'success' : 'error'} /> drink</Typography>\r\n                </Card>\r\n              </TimelineContent>\r\n            </TimelineItem>\r\n  )\r\n}\r\n","import { TimelineItem, TimelineSeparator, TimelineDot, TimelineContent, TimelineConnector, TimelineOppositeContent } from '@mui/lab'\r\nimport '../App.css';\r\nimport {  Card,  Typography } from \"@mui/material\";\r\nimport Moment from 'react-moment';\r\nimport {  decorateMenuItemText } from '../hooks/functions';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { GlobalContext } from '../context/globalContext';\r\nimport { useContext} from \"react\";\r\n\r\nexport const DefaultTimeline = (props:any) => {\r\n  console.log(props);\r\n  return (\r\n    <TimelineItem>\r\n        <TimelineOppositeContent\r\n          sx={{ m: 'auto 0'}}\r\n          align=\"right\"\r\n          variant=\"body2\"\r\n          color=\"text.secondary\"\r\n        >\r\n          <Moment format=\"YYYY/MM/DD hh:mm a\">{props.props.timestamp}</Moment>\r\n        </TimelineOppositeContent>\r\n              <TimelineSeparator>\r\n                <TimelineConnector />\r\n                <TimelineDot >\r\n                    <VisibilityIcon />\r\n                </TimelineDot>\r\n              </TimelineSeparator>  \r\n              <TimelineContent>\r\n                <Card sx={{p:3}}>\r\n                <Typography variant=\"body2\">{decorateMenuItemText(props.props.event_type)}</Typography>\r\n                </Card>\r\n              </TimelineContent>\r\n            </TimelineItem>\r\n  )\r\n}\r\n","import { TimelineItem, TimelineSeparator, TimelineDot, TimelineContent, TimelineConnector, TimelineOppositeContent } from '@mui/lab'\r\nimport '../App.css';\r\nimport {  Card, Chip, Typography } from \"@mui/material\";\r\nimport Moment from 'react-moment';\r\nimport MonitorHeartSharpIcon from '@mui/icons-material/MonitorHeartSharp';\r\n\r\nexport const PhysicalHealthTimeline = (props:any) => {\r\n  return (\r\n    <TimelineItem>\r\n        <TimelineOppositeContent\r\n          sx={{ m: 'auto 0' }}\r\n          align=\"right\"\r\n          variant=\"body2\"\r\n          color=\"text.secondary\"\r\n        >\r\n          <Moment format=\"YYYY/MM/DD hh:mm a\">{props.props.timestamp}</Moment>\r\n        </TimelineOppositeContent>\r\n              <TimelineSeparator>\r\n                <TimelineConnector />\r\n                <TimelineDot >\r\n                    <MonitorHeartSharpIcon />\r\n                </TimelineDot> \r\n              </TimelineSeparator>\r\n              <TimelineContent>\r\n                <Card sx={{p:3}}>\r\n                <Typography variant=\"body2\">{props.props.payload.note}</Typography>\r\n                </Card>\r\n              </TimelineContent> \r\n            </TimelineItem>\r\n  )\r\n}\r\n","import { TimelineItem, TimelineSeparator, TimelineDot, TimelineContent, TimelineConnector, TimelineOppositeContent } from '@mui/lab'\r\nimport '../App.css';\r\nimport {  Card, Chip, Typography } from \"@mui/material\";\r\nimport Moment from 'react-moment';\r\nimport { capitalizeWords } from '../hooks/functions';\r\nimport VaccinesSharpIcon from '@mui/icons-material/VaccinesSharp';\r\n\r\nexport const RegularMedicationTimeline = (props:any) => {\r\n  return (\r\n    <TimelineItem>\r\n        <TimelineOppositeContent\r\n          sx={{ m: 'auto 0' }}\r\n          align=\"right\"\r\n          variant=\"body2\"\r\n          color=\"text.secondary\"\r\n        >\r\n          <Moment format=\"YYYY/MM/DD hh:mm a\">{props.props.timestamp}</Moment>\r\n        </TimelineOppositeContent>\r\n              <TimelineSeparator>\r\n                <TimelineConnector />\r\n                <TimelineDot >\r\n                    <VaccinesSharpIcon />\r\n                </TimelineDot>\r\n              </TimelineSeparator>\r\n              <TimelineContent>\r\n                <Card sx={{p:3}}>\r\n                <Typography variant=\"body2\">{props.props.payload.medication_type}</Typography>\r\n                </Card>\r\n              </TimelineContent>\r\n            </TimelineItem>\r\n  )\r\n}\r\n","import { TimelineItem, TimelineSeparator, TimelineDot, TimelineContent, TimelineConnector, TimelineOppositeContent } from '@mui/lab'\r\nimport '../App.css';\r\nimport {  Card, Chip, Typography } from \"@mui/material\";\r\nimport Moment from 'react-moment';\r\nimport { capitalizeWords } from '../hooks/functions';\r\nimport TaskSharpIcon from '@mui/icons-material/TaskSharp';\r\n\r\nexport const TaskTimeline = (props:any) => {\r\n  return (\r\n    <TimelineItem>\r\n        <TimelineOppositeContent\r\n          sx={{ m: 'auto 0' }}\r\n          align=\"right\"\r\n          variant=\"body2\"\r\n          color=\"text.secondary\"\r\n        >\r\n          <Moment format=\"YYYY/MM/DD hh:mm a\">{props.props.timestamp}</Moment>\r\n        </TimelineOppositeContent>\r\n              <TimelineSeparator>\r\n                <TimelineConnector />\r\n                <TimelineDot >\r\n                    <TaskSharpIcon />\r\n                </TimelineDot>\r\n              </TimelineSeparator>\r\n              <TimelineContent>\r\n                <Card sx={{p:3}}>\r\n                <Typography variant=\"body2\">{props.props.payload.task_definition_description}</Typography>\r\n                </Card>\r\n              </TimelineContent>\r\n            </TimelineItem>\r\n  )\r\n}\r\n","import { TimelineItem, TimelineSeparator, TimelineDot, TimelineContent, TimelineConnector, TimelineOppositeContent } from '@mui/lab'\r\nimport '../App.css';\r\nimport {  Card, Chip, Typography } from \"@mui/material\";\r\nimport Moment from 'react-moment';\r\nimport HikingSharpIcon from '@mui/icons-material/HikingSharp';\r\nimport { decorateMenuItemText } from '../hooks/functions';\r\n\r\nexport const VisitTimeline = (props:any) => {\r\n  return (\r\n    <TimelineItem>\r\n        <TimelineOppositeContent\r\n          sx={{ m: 'auto 0' }}\r\n          align=\"right\"\r\n          variant=\"body2\"\r\n          color=\"text.secondary\"\r\n        >\r\n          <Moment format=\"YYYY/MM/DD hh:mm a\">{props.props.timestamp}</Moment>\r\n        </TimelineOppositeContent>\r\n              <TimelineSeparator>\r\n                <TimelineConnector />\r\n                <TimelineDot >\r\n                    <HikingSharpIcon />\r\n                </TimelineDot> \r\n              </TimelineSeparator>\r\n              <TimelineContent>\r\n                <Card sx={{p:3}}>\r\n                <Typography variant=\"body2\">{decorateMenuItemText(props.props.event_type)}</Typography>\r\n                </Card>\r\n              </TimelineContent> \r\n            </TimelineItem>\r\n  )\r\n}\r\n","export default (state: any, action: any) => {\r\n    switch(action.type){\r\n          case 'SET_USER':\r\n            return {\r\n              ...state,\r\n              user: action.payload\r\n            }\r\n      default:\r\n            return state;\r\n    }\r\n  }","import { createContext,  useReducer } from \"react\";\r\nimport AppReducer from \"./appReducer\";\r\n\r\nconst AppData = {\r\n    user: 'Bob'\r\n}\r\n\r\nexport const GlobalContext = createContext(AppData);\r\n\r\nexport const GlobalProvider = (params: any) => {\r\n\r\n    const [state, dispatch] = useReducer(AppReducer, AppData);\r\n\r\n    function setUser(action: any) {\r\n        return dispatch({\r\n            type: 'SET_USER',\r\n            payload: action\r\n        })\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        ...state, setUser\r\n    }}>\r\n        {params.children}\r\n    </GlobalContext.Provider>);\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Box from \"@mui/material/Box\";\r\nimport '../App.css';\r\nimport { Grid, Alert, Card, Backdrop, CircularProgress } from '@mui/material';\r\nimport { Timeline } from '@mui/lab'\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { useParams } from 'react-router-dom';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Chip from '@mui/material/Chip';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\nimport { decorateMenuItemText, randomColor } from '../hooks/functions';\r\nimport { MoodTimeline } from '../components/MoodTimeline';\r\nimport { FluidIntakeTimeline } from '../components/FluidIntakeTimeline';\r\nimport { DefaultTimeline } from '../components/DefaultTimeline';\r\nimport { PhysicalHealthTimeline } from '../components/PhysicalHealthTimeline';\r\nimport { RegularMedicationTimeline } from '../components/RegularMedicationTimeline';\r\nimport { TaskTimeline } from '../components/TaskTimeline';\r\nimport { VisitTimeline } from '../components/VisitTimeline';\r\nimport { GroupedData } from '../types/groupedData';\r\nimport { GlobalContext } from '../context/globalContext';\r\nimport { BasicEvent } from '../types/event';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n\r\nfunction Home(props:any) {\r\n  const __MAX__ = 25;\r\n  let { id } = useParams();\r\n  const { user } = useContext(GlobalContext);\r\n  const [counter, setCounter] = useState(20);\r\n  const [data, setData] = useState<BasicEvent[]>([]);\r\n  const [obvType, setObvType] = useState<any>();\r\n  const [dateTimeFrom, setDateTimeFrom] = useState<any>();\r\n  const [dateTimeTo, setDateTimeTo] = useState<any>();\r\n  const [obvTypes, setObvTypes] = useState([]);\r\n  const [snapShotData, setSnapShotData] = useState<BasicEvent[]>([]);\r\n  const [open, setOpen] = useState(true);\r\n  const [groupedData, setGroupedData] = useState<GroupedData>({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Observations\",\r\n        data: [],\r\n        backgroundColor: [],\r\n        borderColor: [],\r\n        borderWidth: 0.5,\r\n      },\r\n    ],\r\n  });\r\n  \r\n\r\n  const loadMoreTimeLineDataHandler = async () => {\r\n    setSnapShotData(data.slice(0, counter));\r\n    setCounter(counter + __MAX__);\r\n  }\r\n  const handleChange = (event: SelectChangeEvent) => {\r\n    console.log(event);\r\n    setObvType(event.target.value as any);\r\n  };\r\n  const handleDateTimeFrom = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log(event);\r\n    setDateTimeFrom(event.target.value);\r\n  }\r\n  const handleDateTimeTo = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDateTimeTo(event.target.value);\r\n  }\r\n  const search = () => {\r\n    let uri = 'api/' + (id != null ? id : props?.id)\r\n      + (\r\n        (obvType != null && (dateTimeTo == null || dateTimeFrom == null))\r\n          ? \"/events/\" + obvType.event_type\r\n          :\r\n          (obvType == null && (dateTimeTo != null && dateTimeFrom != null))\r\n            ? \"/search\"\r\n            :\r\n            (obvType == null && (dateTimeTo == null || dateTimeFrom == null))\r\n              ? \"\"\r\n              :\r\n              \"/events/\" + obvType.event_type + \"/search\");\r\n\r\n    let method = (obvType != null && (dateTimeTo == null || dateTimeFrom == null))\r\n      ? \"GET\"\r\n      :\r\n      (obvType == null && (dateTimeTo != null && dateTimeFrom != null))\r\n        ? \"POST\"\r\n        :\r\n        (obvType == null && (dateTimeTo == null || dateTimeFrom == null))\r\n          ? \"GET\"\r\n          :\r\n          \"POST\";\r\n\r\n    let data = dateTimeTo != null && dateTimeFrom != null ? { from: new Date(dateTimeFrom).toISOString(), to: new Date(dateTimeTo).toISOString() } : {};\r\n    setOpen(true);\r\n    fetch(uri, {\r\n      method: method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: method == \"GET\" ? null : JSON.stringify(data)\r\n    }).then(async (result) => {\r\n      const data = await result.json();\r\n      setData(data.data);\r\n      setSnapShotData(data.data.slice(0, __MAX__));\r\n      performGroupData(data.data);\r\n    }).catch(err => console.error(err)).finally(() => {\r\n      setOpen(false);\r\n    });\r\n  };\r\n  const clear = () => {\r\n    setObvType(null);\r\n    setDateTimeFrom(null);\r\n    setDateTimeTo(null);\r\n    loadAllData();\r\n  }\r\n  const performGroupData = async (entryData: any) => {\r\n    const arr: any = {};\r\n    let labels: any = [];\r\n    let borderBg: any = [];\r\n    let data: any = [];\r\n    entryData.forEach((d: any) => {\r\n      arr[d.payload.event_type] == null ? arr[d.payload.event_type] = 1 : arr[d.payload.event_type] += 1;\r\n    });\r\n    labels = Object.keys(arr);\r\n    labels.forEach((e: any, f: any, g: any) => g[f] = decorateMenuItemText(g[f]));\r\n    data = Object.values(arr);\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n      borderBg.push(randomColor());\r\n    }\r\n    setGroupedData({\r\n      ...groupedData,\r\n      labels: labels,\r\n      datasets: [{\r\n        ...groupedData.datasets[0],\r\n        data: data,\r\n        borderColor: borderBg,\r\n        backgroundColor: borderBg\r\n      }]\r\n    });\r\n  }\r\n  const loadAllData = () => {\r\n    setOpen(true);\r\n    fetch('api/' + (id != null ? id : props?.id)).then(async (result) => {\r\n      const data = await result.json();\r\n      setData(data.data);\r\n      setSnapShotData(data.data.slice(0, __MAX__));\r\n      performGroupData(data.data);\r\n    }).catch(err => console.error(err)).finally(() => {\r\n      setOpen(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetch('api/event_types').then(async (result) => {\r\n        const data = await result.json();\r\n        setObvTypes(data.data);\r\n        loadAllData()\r\n      }).catch(err => console.error(err));\r\n    });\r\n  }, []);\r\n  return <div>\r\n    <Backdrop\r\n      open={open} sx={{zIndex:1000}}>\r\n      <CircularProgress />\r\n    </Backdrop>\r\n    <Grid container style={{ padding: '3rem' }}>\r\n      <Grid item xs={12} >\r\n        <Grid item lg={6} sx={{ mb: 3 }} >\r\n          <Alert severity=\"success\">Hello <span role=\"img\" aria-label=\"smiley\">🥰</span> and welcome!!!</Alert>\r\n        </Grid>\r\n\r\n      </Grid>\r\n      <Grid item xs={12} >\r\n        <Grid item lg={6} sx={{ mb: 3 }} >\r\n          <Alert severity=\"info\">Welcome to Birdie 🐦 observation dashboard, this will help you visualize how we have observed {user} </Alert>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item lg={6} xs={12}><Card sx={{ m: 1, minHeight: 500 }}>\r\n        <Doughnut data={groupedData} options={{ maintainAspectRatio: false }} height={450} />\r\n      </Card></Grid>\r\n      <Grid item lg={6} xs={12}>\r\n        <Card sx={{ m: 1, minHeight: 500 }}>\r\n          {\r\n            (groupedData.labels.map((label, index) => (\r\n              <Chip avatar={<Avatar>{groupedData.datasets[0].data[index]}</Avatar>} sx={{ m: 1, backgroundColor: groupedData.datasets[0].backgroundColor[index] }} label={label} />\r\n            )))\r\n          }\r\n        </Card>\r\n      </Grid>\r\n\r\n\r\n      <Grid item lg={4} sx={{ mb: 3 }} xs={12} >\r\n        <FormControl fullWidth>\r\n          <InputLabel >Sort By</InputLabel>\r\n          <Select\r\n            labelId=\"sort-select-label\"\r\n            id=\"sort-select\"\r\n            value={obvType}\r\n            label=\"Sort By\"\r\n            onChange={handleChange}\r\n          >\r\n            {\r\n              obvTypes.map((r: any) => (\r\n                <MenuItem value={r}>{decorateMenuItemText(r.event_type)}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item lg={4} sx={{ mb: 3 }} xs={12}>\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            id=\"datetime-local-from\"\r\n            label=\"From\"\r\n            type=\"datetime-local\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={dateTimeFrom}\r\n            onChange={handleDateTimeFrom}\r\n          /></FormControl>\r\n      </Grid>\r\n      <Grid item lg={4} sx={{ mb: 3 }} xs >\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            id=\"datetime-local-to\"\r\n            label=\"To\"\r\n            type=\"datetime-local\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={dateTimeTo}\r\n            onChange={handleDateTimeTo}\r\n          /></FormControl>\r\n      </Grid>\r\n      <Grid item lg={12} sx={{ mb: 3 }}>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <ButtonGroup variant=\"contained\">\r\n            <Button onClick={search} id=\"search\">Search</Button>\r\n            <Button color=\"secondary\" onClick={clear} id=\"clear\">Clear</Button>\r\n          </ButtonGroup></Box>\r\n      </Grid>\r\n      <Grid item style={{ textAlign: 'center' }} xs={12} id=\"timeline-container\">\r\n        <h3>Timeline</h3>\r\n        <Timeline position=\"alternate\">\r\n          {\r\n\r\n            snapShotData.map((r: any) => (\r\n              (r.payload.event_type == \"fluid_intake_observation\")\r\n                ?\r\n                <FluidIntakeTimeline props={{...r, user: user }} />\r\n                :\r\n                (\r\n                  (r.payload.event_type == \"mood_observation\") ?\r\n                    <MoodTimeline props={{...r, user: user }} />\r\n                    :\r\n                    (\r\n                      (r.payload.event_type == \"physical_health_observation\") ?\r\n                        <PhysicalHealthTimeline props={{...r, user: user }} />\r\n                        :\r\n                        (\r\n                          (r.payload.event_type == \"task_completed\") ?\r\n                            <TaskTimeline props={{...r, user: user }} />\r\n                            : \r\n                            (\r\n                              (r.payload.event_type == \"regular_medication_taken\") ?\r\n                                <RegularMedicationTimeline props={{...r, user: user }} />\r\n                                :\r\n                                (\r\n                                  (r.payload.event_type) == \"visit_completed\") ?\r\n                                  <VisitTimeline props={{...r, user: user }} />\r\n                                  :\r\n                                  <DefaultTimeline props={{...r, user: user }} />\r\n                            )\r\n                        )\r\n                    )\r\n                )\r\n            ))\r\n          }\r\n        </Timeline>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} style={{ textAlign: 'center' }}>\r\n        <Button variant=\"contained\" onClick={(e) => loadMoreTimeLineDataHandler()} id=\"load-more\" >Load More</Button>\r\n      </Grid>\r\n    </Grid></div>\r\n}\r\n\r\nexport default Home;\r\n","import Home from \"./pages/Home\";\r\nimport { BrowserRouter, Routes, Route} from 'react-router-dom';\r\nimport {GlobalProvider} from './context/globalContext';\r\n\r\nconst App = () => {\r\n  return <GlobalProvider>\r\n    <BrowserRouter>\r\n    <Routes>\r\n      <Route path=\"/:id\" element={<Home props={null}/>} />\r\n   </Routes>\r\n    </BrowserRouter>\r\n  </GlobalProvider>\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './App.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}